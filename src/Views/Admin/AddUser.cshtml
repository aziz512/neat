@model News.Models.User
@{
    ViewBag.Title = "AddUser";
}

<h2>Add User</h2>
<hr />
<p class="validation-summary">
    @Html.ValidationSummary()
    @if (ViewBag.Errors != null)
    {
        <ul>
            @foreach (var item in ViewBag.Errors as List<string>)
            {
                <li>@item</li>
            }
        </ul>
    }
</p>
@using (Html.BeginForm())
{
    <div class="form-horizontal">
        <div class="form-group">
            @Html.LabelFor(model => model.Username, "Username", htmlAttributes: new { @class = "col-md-2 control-label", style = "text-align:left;padding-top:7px;" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
            </div>
        </div>

        @Html.HiddenFor(x => x.Username)

        <div class="form-group">
            @Html.LabelFor(model => model.Password, "Password", new { @class = "col-md-2 control-label", style = "text-align:left;padding-top:7px;" })
            <div class="col-md-3">
                @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Email, "Email", htmlAttributes: new { @class = "col-md-2 control-label", style = "text-align:left;padding-top:7px;" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Group, "Group", htmlAttributes: new { @class = "col-md-2 control-label", style = "text-align:left;padding-top:7px;" })
            <div class="col-md-3">
                @Html.DropDownListFor(x => x.Group, (ViewBag.GroupsList as IEnumerable<SelectListItem>), new { @class = "form-control" } )
                @Html.ValidationMessageFor(model => model.Group, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.FirstName, "First name", htmlAttributes: new { @class = "col-md-2 control-label", style = "text-align:left;padding-top:7px;" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.LastName, "Last name", htmlAttributes: new { @class = "col-md-2 control-label", style = "text-align:left;padding-top:7px;" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.IsBanned, "Banned", htmlAttributes: new { @class = "col-md-2 control-label", style = "text-align:left;padding-top:7px;" })
            <div class="col-md-3">
                @Html.CheckBoxFor(model => model.IsBanned, new { style = "margin-top:10px;" })
                @Html.ValidationMessageFor(model => model.IsBanned, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.BannedDue, "Banned due", htmlAttributes: new { @class = "col-md-2 control-label", style = "text-align:left;padding-top:7px;" })
            <div class="col-md-3">
                @Html.EditorFor(model => model.BannedDue, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.BannedDue, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.Label("Avatar", htmlAttributes: new { @class = "col-md-2 control-label", style = "text-align:left;padding-top:7px;" })
            <div class="col-md-3">
                <input accept=".jpg,.png" id="Avatar" name="Avatar" type="file">
            </div>
        </div>
        <input type="submit" value="Add" class="btn" style="margin-top:10px;" />
    </div>

    <link rel="stylesheet" type="text/css" href="~/Scripts/DateTimePicker/jquery.datetimepicker.css" />
    <script src="~/Scripts/DateTimePicker/jquery.js"></script>
    <script src="~/Scripts/DateTimePicker/build/jquery.datetimepicker.full.min.js"></script>
    <script>
        $("#BannedDue").datetimepicker({
            format: 'm/d/Y H:i',
            lang: 'us'
        });
    </script>
}

